CREATE TABLE default.sharded_session_recording_events (`uuid` UUID, `timestamp` DateTime64(6, 'UTC'), `team_id` Int64, `distinct_id` String, `session_id` String, `window_id` String, `snapshot_data` String, `created_at` DateTime64(6, 'UTC'), `has_full_snapshot` Int8 MATERIALIZED JSONExtractBool(snapshot_data, 'has_full_snapshot'), `events_summary` Array(String) MATERIALIZED JSONExtract(JSON_QUERY(snapshot_data, '$.events_summary[*]'), 'Array(String)'), `click_count` Int8 MATERIALIZED length(arrayFilter(x -> ((JSONExtractInt(x, 'type') = 3) AND (JSONExtractInt(x, 'data', 'source') = 2)), events_summary)), `keypress_count` Int8 MATERIALIZED length(arrayFilter(x -> ((JSONExtractInt(x, 'type') = 3) AND (JSONExtractInt(x, 'data', 'source') = 5)), events_summary)), `timestamps_summary` Array(DateTime64(6, 'UTC')) MATERIALIZED arraySort(arrayMap(x -> toDateTime(JSONExtractInt(x, 'timestamp') / 1000), events_summary)), `first_event_timestamp` Nullable(DateTime64(6, 'UTC')) MATERIALIZED if(empty(timestamps_summary), NULL, arrayReduce('min', timestamps_summary)), `last_event_timestamp` Nullable(DateTime64(6, 'UTC')) MATERIALIZED if(empty(timestamps_summary), NULL, arrayReduce('max', timestamps_summary)), `urls` Array(String) MATERIALIZED arrayFilter(x -> (x != ''), arrayMap(x -> JSONExtractString(x, 'data', 'href'), events_summary)), `_timestamp` DateTime, `_offset` UInt64, INDEX kafka_timestamp_minmax_sharded_session_recording_events _timestamp TYPE minmax GRANULARITY 3) ENGINE = ReplicatedReplacingMergeTree('/clickhouse/tables/{shard}/posthog.session_recording_events', '{replica}', _timestamp) PARTITION BY toYYYYMMDD(timestamp) ORDER BY (team_id, toHour(timestamp), session_id, timestamp, uuid) TTL toDate(created_at) + toIntervalWeek(3) SETTINGS index_granularity = 512