CREATE MATERIALIZED VIEW default.session_replay_events_mv TO default.writable_session_replay_events (`session_id` String, `team_id` Int64, `distinct_id` String, `min_first_timestamp` DateTime64(6, 'UTC'), `max_last_timestamp` DateTime64(6, 'UTC'), `block_first_timestamps` SimpleAggregateFunction(groupArrayArray, Array(DateTime64(6, 'UTC'))), `block_last_timestamps` SimpleAggregateFunction(groupArrayArray, Array(DateTime64(6, 'UTC'))), `block_urls` SimpleAggregateFunction(groupArrayArray, Array(String)), `first_url` AggregateFunction(argMin, Nullable(String), DateTime64(6, 'UTC')), `all_urls` SimpleAggregateFunction(groupUniqArrayArray, Array(String)), `click_count` Int64, `keypress_count` Int64, `mouse_activity_count` Int64, `active_milliseconds` Int64, `console_log_count` Int64, `console_warn_count` Int64, `console_error_count` Int64, `size` Int64, `message_count` Int64, `event_count` Int64, `snapshot_source` AggregateFunction(argMin, LowCardinality(Nullable(String)), DateTime64(6, 'UTC')), `snapshot_library` AggregateFunction(argMin, Nullable(String), DateTime64(6, 'UTC')), `_timestamp` Nullable(DateTime), `retention_period_days` SimpleAggregateFunction(max, Nullable(Int64))) AS SELECT session_id, team_id, any(distinct_id) AS distinct_id, min(first_timestamp) AS min_first_timestamp, max(last_timestamp) AS max_last_timestamp, groupArray(if(block_url != '', first_timestamp, NULL)) AS block_first_timestamps, groupArray(if(block_url != '', last_timestamp, NULL)) AS block_last_timestamps, groupArray(block_url) AS block_urls, argMinState(first_url, first_timestamp) AS first_url, groupUniqArrayArray(urls) AS all_urls, sum(click_count) AS click_count, sum(keypress_count) AS keypress_count, sum(mouse_activity_count) AS mouse_activity_count, sum(active_milliseconds) AS active_milliseconds, sum(console_log_count) AS console_log_count, sum(console_warn_count) AS console_warn_count, sum(console_error_count) AS console_error_count, sum(size) AS size, sum(message_count) AS message_count, sum(event_count) AS event_count, argMinState(snapshot_source, first_timestamp) AS snapshot_source, argMinState(snapshot_library, first_timestamp) AS snapshot_library, max(_timestamp) AS _timestamp, max(retention_period_days) AS retention_period_days FROM default.kafka_session_replay_events GROUP BY session_id, team_id