# Use a Go base image
FROM golang:1.25

# Set environment variables
ENV GO111MODULE=on

RUN \
    apt-get update && \
    apt-get install unzip wget -y && \
    rm -rf /var/lib/apt/lists/*

# Install protobuf compiler
ENV PROTO_VER=32.1
ENV PROTOC_ZIP=protoc-${PROTO_VER}-linux-x86_64.zip
RUN curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v${PROTO_VER}/${PROTOC_ZIP}
RUN unzip -o ${PROTOC_ZIP} -d ./proto
RUN chmod 755 -R ./proto/bin
ENV BASE=/usr
# Copy into path
RUN cp ./proto/bin/protoc ${BASE}/bin/
RUN cp -R ./proto/include/* ${BASE}/include/

# Download protoc-gen-grpc-web
#ENV GRPC_WEB=protoc-gen-grpc-web-1.2.1-linux-x86_64
#ENV GRPC_WEB_PATH=/usr/bin/protoc-gen-grpc-web
#RUN curl -OL https://github.com/grpc/grpc-web/releases/download/1.2.1/${GRPC_WEB}
# Copy into path
#RUN mv ${GRPC_WEB} ${GRPC_WEB_PATH}
#RUN chmod +x ${GRPC_WEB_PATH}

# Install Go protobuf plugins
RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
RUN go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

# Add protoc-gen-go and protoc-gen-go-grpc to the PATH
ENV PATH="/go/bin:${PATH}"

# Set a working directory
WORKDIR /app

# Command to run when the container starts (optional, can be overridden)
# This example shows how you might run protoc, but you'll typically mount your proto files
# and run protoc from your host machine or a build script.
CMD ["protoc", "--version"]