// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: proto/engine.proto

package chschema_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Engine struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EngineType:
	//
	//	*Engine_MergeTree
	//	*Engine_ReplicatedMergeTree
	//	*Engine_ReplacingMergeTree
	//	*Engine_ReplicatedReplacingMergeTree
	//	*Engine_SummingMergeTree
	//	*Engine_Distributed
	//	*Engine_Log
	EngineType    isEngine_EngineType `protobuf_oneof:"engine_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Engine) Reset() {
	*x = Engine{}
	mi := &file_proto_engine_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Engine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Engine) ProtoMessage() {}

func (x *Engine) ProtoReflect() protoreflect.Message {
	mi := &file_proto_engine_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Engine.ProtoReflect.Descriptor instead.
func (*Engine) Descriptor() ([]byte, []int) {
	return file_proto_engine_proto_rawDescGZIP(), []int{0}
}

func (x *Engine) GetEngineType() isEngine_EngineType {
	if x != nil {
		return x.EngineType
	}
	return nil
}

func (x *Engine) GetMergeTree() *MergeTree {
	if x != nil {
		if x, ok := x.EngineType.(*Engine_MergeTree); ok {
			return x.MergeTree
		}
	}
	return nil
}

func (x *Engine) GetReplicatedMergeTree() *ReplicatedMergeTree {
	if x != nil {
		if x, ok := x.EngineType.(*Engine_ReplicatedMergeTree); ok {
			return x.ReplicatedMergeTree
		}
	}
	return nil
}

func (x *Engine) GetReplacingMergeTree() *ReplacingMergeTree {
	if x != nil {
		if x, ok := x.EngineType.(*Engine_ReplacingMergeTree); ok {
			return x.ReplacingMergeTree
		}
	}
	return nil
}

func (x *Engine) GetReplicatedReplacingMergeTree() *ReplicatedReplacingMergeTree {
	if x != nil {
		if x, ok := x.EngineType.(*Engine_ReplicatedReplacingMergeTree); ok {
			return x.ReplicatedReplacingMergeTree
		}
	}
	return nil
}

func (x *Engine) GetSummingMergeTree() *SummingMergeTree {
	if x != nil {
		if x, ok := x.EngineType.(*Engine_SummingMergeTree); ok {
			return x.SummingMergeTree
		}
	}
	return nil
}

func (x *Engine) GetDistributed() *Distributed {
	if x != nil {
		if x, ok := x.EngineType.(*Engine_Distributed); ok {
			return x.Distributed
		}
	}
	return nil
}

func (x *Engine) GetLog() *Log {
	if x != nil {
		if x, ok := x.EngineType.(*Engine_Log); ok {
			return x.Log
		}
	}
	return nil
}

type isEngine_EngineType interface {
	isEngine_EngineType()
}

type Engine_MergeTree struct {
	MergeTree *MergeTree `protobuf:"bytes,1,opt,name=merge_tree,json=mergeTree,proto3,oneof"`
}

type Engine_ReplicatedMergeTree struct {
	ReplicatedMergeTree *ReplicatedMergeTree `protobuf:"bytes,2,opt,name=replicated_merge_tree,json=replicatedMergeTree,proto3,oneof"`
}

type Engine_ReplacingMergeTree struct {
	ReplacingMergeTree *ReplacingMergeTree `protobuf:"bytes,3,opt,name=replacing_merge_tree,json=replacingMergeTree,proto3,oneof"`
}

type Engine_ReplicatedReplacingMergeTree struct {
	ReplicatedReplacingMergeTree *ReplicatedReplacingMergeTree `protobuf:"bytes,4,opt,name=replicated_replacing_merge_tree,json=replicatedReplacingMergeTree,proto3,oneof"`
}

type Engine_SummingMergeTree struct {
	SummingMergeTree *SummingMergeTree `protobuf:"bytes,5,opt,name=summing_merge_tree,json=summingMergeTree,proto3,oneof"`
}

type Engine_Distributed struct {
	Distributed *Distributed `protobuf:"bytes,20,opt,name=distributed,proto3,oneof"`
}

type Engine_Log struct {
	Log *Log `protobuf:"bytes,21,opt,name=log,proto3,oneof"`
}

func (*Engine_MergeTree) isEngine_EngineType() {}

func (*Engine_ReplicatedMergeTree) isEngine_EngineType() {}

func (*Engine_ReplacingMergeTree) isEngine_EngineType() {}

func (*Engine_ReplicatedReplacingMergeTree) isEngine_EngineType() {}

func (*Engine_SummingMergeTree) isEngine_EngineType() {}

func (*Engine_Distributed) isEngine_EngineType() {}

func (*Engine_Log) isEngine_EngineType() {}

type MergeTree struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeTree) Reset() {
	*x = MergeTree{}
	mi := &file_proto_engine_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeTree) ProtoMessage() {}

func (x *MergeTree) ProtoReflect() protoreflect.Message {
	mi := &file_proto_engine_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeTree.ProtoReflect.Descriptor instead.
func (*MergeTree) Descriptor() ([]byte, []int) {
	return file_proto_engine_proto_rawDescGZIP(), []int{1}
}

type ReplicatedMergeTree struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ZooPath       string                 `protobuf:"bytes,1,opt,name=zoo_path,json=zooPath,proto3" json:"zoo_path,omitempty"`
	ReplicaName   string                 `protobuf:"bytes,2,opt,name=replica_name,json=replicaName,proto3" json:"replica_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicatedMergeTree) Reset() {
	*x = ReplicatedMergeTree{}
	mi := &file_proto_engine_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicatedMergeTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedMergeTree) ProtoMessage() {}

func (x *ReplicatedMergeTree) ProtoReflect() protoreflect.Message {
	mi := &file_proto_engine_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedMergeTree.ProtoReflect.Descriptor instead.
func (*ReplicatedMergeTree) Descriptor() ([]byte, []int) {
	return file_proto_engine_proto_rawDescGZIP(), []int{2}
}

func (x *ReplicatedMergeTree) GetZooPath() string {
	if x != nil {
		return x.ZooPath
	}
	return ""
}

func (x *ReplicatedMergeTree) GetReplicaName() string {
	if x != nil {
		return x.ReplicaName
	}
	return ""
}

type ReplacingMergeTree struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VersionColumn *string                `protobuf:"bytes,1,opt,name=version_column,json=versionColumn,proto3,oneof" json:"version_column,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplacingMergeTree) Reset() {
	*x = ReplacingMergeTree{}
	mi := &file_proto_engine_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplacingMergeTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplacingMergeTree) ProtoMessage() {}

func (x *ReplacingMergeTree) ProtoReflect() protoreflect.Message {
	mi := &file_proto_engine_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplacingMergeTree.ProtoReflect.Descriptor instead.
func (*ReplacingMergeTree) Descriptor() ([]byte, []int) {
	return file_proto_engine_proto_rawDescGZIP(), []int{3}
}

func (x *ReplacingMergeTree) GetVersionColumn() string {
	if x != nil && x.VersionColumn != nil {
		return *x.VersionColumn
	}
	return ""
}

type ReplicatedReplacingMergeTree struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ZooPath       string                 `protobuf:"bytes,1,opt,name=zoo_path,json=zooPath,proto3" json:"zoo_path,omitempty"`
	ReplicaName   string                 `protobuf:"bytes,2,opt,name=replica_name,json=replicaName,proto3" json:"replica_name,omitempty"`
	VersionColumn *string                `protobuf:"bytes,3,opt,name=version_column,json=versionColumn,proto3,oneof" json:"version_column,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicatedReplacingMergeTree) Reset() {
	*x = ReplicatedReplacingMergeTree{}
	mi := &file_proto_engine_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicatedReplacingMergeTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicatedReplacingMergeTree) ProtoMessage() {}

func (x *ReplicatedReplacingMergeTree) ProtoReflect() protoreflect.Message {
	mi := &file_proto_engine_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicatedReplacingMergeTree.ProtoReflect.Descriptor instead.
func (*ReplicatedReplacingMergeTree) Descriptor() ([]byte, []int) {
	return file_proto_engine_proto_rawDescGZIP(), []int{4}
}

func (x *ReplicatedReplacingMergeTree) GetZooPath() string {
	if x != nil {
		return x.ZooPath
	}
	return ""
}

func (x *ReplicatedReplacingMergeTree) GetReplicaName() string {
	if x != nil {
		return x.ReplicaName
	}
	return ""
}

func (x *ReplicatedReplacingMergeTree) GetVersionColumn() string {
	if x != nil && x.VersionColumn != nil {
		return *x.VersionColumn
	}
	return ""
}

type SummingMergeTree struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SumColumns    []string               `protobuf:"bytes,1,rep,name=sum_columns,json=sumColumns,proto3" json:"sum_columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SummingMergeTree) Reset() {
	*x = SummingMergeTree{}
	mi := &file_proto_engine_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SummingMergeTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummingMergeTree) ProtoMessage() {}

func (x *SummingMergeTree) ProtoReflect() protoreflect.Message {
	mi := &file_proto_engine_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummingMergeTree.ProtoReflect.Descriptor instead.
func (*SummingMergeTree) Descriptor() ([]byte, []int) {
	return file_proto_engine_proto_rawDescGZIP(), []int{5}
}

func (x *SummingMergeTree) GetSumColumns() []string {
	if x != nil {
		return x.SumColumns
	}
	return nil
}

type Distributed struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ClusterName    string                 `protobuf:"bytes,1,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	RemoteDatabase string                 `protobuf:"bytes,2,opt,name=remote_database,json=remoteDatabase,proto3" json:"remote_database,omitempty"`
	RemoteTable    string                 `protobuf:"bytes,3,opt,name=remote_table,json=remoteTable,proto3" json:"remote_table,omitempty"`
	ShardingKey    *string                `protobuf:"bytes,4,opt,name=sharding_key,json=shardingKey,proto3,oneof" json:"sharding_key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Distributed) Reset() {
	*x = Distributed{}
	mi := &file_proto_engine_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Distributed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Distributed) ProtoMessage() {}

func (x *Distributed) ProtoReflect() protoreflect.Message {
	mi := &file_proto_engine_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Distributed.ProtoReflect.Descriptor instead.
func (*Distributed) Descriptor() ([]byte, []int) {
	return file_proto_engine_proto_rawDescGZIP(), []int{6}
}

func (x *Distributed) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *Distributed) GetRemoteDatabase() string {
	if x != nil {
		return x.RemoteDatabase
	}
	return ""
}

func (x *Distributed) GetRemoteTable() string {
	if x != nil {
		return x.RemoteTable
	}
	return ""
}

func (x *Distributed) GetShardingKey() string {
	if x != nil && x.ShardingKey != nil {
		return *x.ShardingKey
	}
	return ""
}

type Log struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_proto_engine_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_proto_engine_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_proto_engine_proto_rawDescGZIP(), []int{7}
}

var File_proto_engine_proto protoreflect.FileDescriptor

const file_proto_engine_proto_rawDesc = "" +
	"\n" +
	"\x12proto/engine.proto\x12\x11clickhouse.iac.v1\"\xce\x04\n" +
	"\x06Engine\x12=\n" +
	"\n" +
	"merge_tree\x18\x01 \x01(\v2\x1c.clickhouse.iac.v1.MergeTreeH\x00R\tmergeTree\x12\\\n" +
	"\x15replicated_merge_tree\x18\x02 \x01(\v2&.clickhouse.iac.v1.ReplicatedMergeTreeH\x00R\x13replicatedMergeTree\x12Y\n" +
	"\x14replacing_merge_tree\x18\x03 \x01(\v2%.clickhouse.iac.v1.ReplacingMergeTreeH\x00R\x12replacingMergeTree\x12x\n" +
	"\x1freplicated_replacing_merge_tree\x18\x04 \x01(\v2/.clickhouse.iac.v1.ReplicatedReplacingMergeTreeH\x00R\x1creplicatedReplacingMergeTree\x12S\n" +
	"\x12summing_merge_tree\x18\x05 \x01(\v2#.clickhouse.iac.v1.SummingMergeTreeH\x00R\x10summingMergeTree\x12B\n" +
	"\vdistributed\x18\x14 \x01(\v2\x1e.clickhouse.iac.v1.DistributedH\x00R\vdistributed\x12*\n" +
	"\x03log\x18\x15 \x01(\v2\x16.clickhouse.iac.v1.LogH\x00R\x03logB\r\n" +
	"\vengine_type\"\v\n" +
	"\tMergeTree\"S\n" +
	"\x13ReplicatedMergeTree\x12\x19\n" +
	"\bzoo_path\x18\x01 \x01(\tR\azooPath\x12!\n" +
	"\freplica_name\x18\x02 \x01(\tR\vreplicaName\"S\n" +
	"\x12ReplacingMergeTree\x12*\n" +
	"\x0eversion_column\x18\x01 \x01(\tH\x00R\rversionColumn\x88\x01\x01B\x11\n" +
	"\x0f_version_column\"\x9b\x01\n" +
	"\x1cReplicatedReplacingMergeTree\x12\x19\n" +
	"\bzoo_path\x18\x01 \x01(\tR\azooPath\x12!\n" +
	"\freplica_name\x18\x02 \x01(\tR\vreplicaName\x12*\n" +
	"\x0eversion_column\x18\x03 \x01(\tH\x00R\rversionColumn\x88\x01\x01B\x11\n" +
	"\x0f_version_column\"3\n" +
	"\x10SummingMergeTree\x12\x1f\n" +
	"\vsum_columns\x18\x01 \x03(\tR\n" +
	"sumColumns\"\xb5\x01\n" +
	"\vDistributed\x12!\n" +
	"\fcluster_name\x18\x01 \x01(\tR\vclusterName\x12'\n" +
	"\x0fremote_database\x18\x02 \x01(\tR\x0eremoteDatabase\x12!\n" +
	"\fremote_table\x18\x03 \x01(\tR\vremoteTable\x12&\n" +
	"\fsharding_key\x18\x04 \x01(\tH\x00R\vshardingKey\x88\x01\x01B\x0f\n" +
	"\r_sharding_key\"\x05\n" +
	"\x03LogB9Z7github.com/posthog/chschema/gen/chschema_v1;chschema_v1b\x06proto3"

var (
	file_proto_engine_proto_rawDescOnce sync.Once
	file_proto_engine_proto_rawDescData []byte
)

func file_proto_engine_proto_rawDescGZIP() []byte {
	file_proto_engine_proto_rawDescOnce.Do(func() {
		file_proto_engine_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_engine_proto_rawDesc), len(file_proto_engine_proto_rawDesc)))
	})
	return file_proto_engine_proto_rawDescData
}

var file_proto_engine_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_engine_proto_goTypes = []any{
	(*Engine)(nil),                       // 0: clickhouse.iac.v1.Engine
	(*MergeTree)(nil),                    // 1: clickhouse.iac.v1.MergeTree
	(*ReplicatedMergeTree)(nil),          // 2: clickhouse.iac.v1.ReplicatedMergeTree
	(*ReplacingMergeTree)(nil),           // 3: clickhouse.iac.v1.ReplacingMergeTree
	(*ReplicatedReplacingMergeTree)(nil), // 4: clickhouse.iac.v1.ReplicatedReplacingMergeTree
	(*SummingMergeTree)(nil),             // 5: clickhouse.iac.v1.SummingMergeTree
	(*Distributed)(nil),                  // 6: clickhouse.iac.v1.Distributed
	(*Log)(nil),                          // 7: clickhouse.iac.v1.Log
}
var file_proto_engine_proto_depIdxs = []int32{
	1, // 0: clickhouse.iac.v1.Engine.merge_tree:type_name -> clickhouse.iac.v1.MergeTree
	2, // 1: clickhouse.iac.v1.Engine.replicated_merge_tree:type_name -> clickhouse.iac.v1.ReplicatedMergeTree
	3, // 2: clickhouse.iac.v1.Engine.replacing_merge_tree:type_name -> clickhouse.iac.v1.ReplacingMergeTree
	4, // 3: clickhouse.iac.v1.Engine.replicated_replacing_merge_tree:type_name -> clickhouse.iac.v1.ReplicatedReplacingMergeTree
	5, // 4: clickhouse.iac.v1.Engine.summing_merge_tree:type_name -> clickhouse.iac.v1.SummingMergeTree
	6, // 5: clickhouse.iac.v1.Engine.distributed:type_name -> clickhouse.iac.v1.Distributed
	7, // 6: clickhouse.iac.v1.Engine.log:type_name -> clickhouse.iac.v1.Log
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_proto_engine_proto_init() }
func file_proto_engine_proto_init() {
	if File_proto_engine_proto != nil {
		return
	}
	file_proto_engine_proto_msgTypes[0].OneofWrappers = []any{
		(*Engine_MergeTree)(nil),
		(*Engine_ReplicatedMergeTree)(nil),
		(*Engine_ReplacingMergeTree)(nil),
		(*Engine_ReplicatedReplacingMergeTree)(nil),
		(*Engine_SummingMergeTree)(nil),
		(*Engine_Distributed)(nil),
		(*Engine_Log)(nil),
	}
	file_proto_engine_proto_msgTypes[3].OneofWrappers = []any{}
	file_proto_engine_proto_msgTypes[4].OneofWrappers = []any{}
	file_proto_engine_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_engine_proto_rawDesc), len(file_proto_engine_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_engine_proto_goTypes,
		DependencyIndexes: file_proto_engine_proto_depIdxs,
		MessageInfos:      file_proto_engine_proto_msgTypes,
	}.Build()
	File_proto_engine_proto = out.File
	file_proto_engine_proto_goTypes = nil
	file_proto_engine_proto_depIdxs = nil
}
