// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: proto/table.proto

package chschema_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Table struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Database      *string                `protobuf:"bytes,2,opt,name=database,proto3,oneof" json:"database,omitempty"`
	Columns       []*Column              `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"`
	Engine        *Engine                `protobuf:"bytes,4,opt,name=engine,proto3" json:"engine,omitempty"`
	OrderBy       []string               `protobuf:"bytes,5,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	PartitionBy   *string                `protobuf:"bytes,6,opt,name=partition_by,json=partitionBy,proto3,oneof" json:"partition_by,omitempty"`
	SampleBy      *string                `protobuf:"bytes,7,opt,name=sample_by,json=sampleBy,proto3,oneof" json:"sample_by,omitempty"`
	Ttl           *string                `protobuf:"bytes,8,opt,name=ttl,proto3,oneof" json:"ttl,omitempty"`
	Settings      map[string]string      `protobuf:"bytes,9,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Indexes       []*Index               `protobuf:"bytes,10,rep,name=indexes,proto3" json:"indexes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Table) Reset() {
	*x = Table{}
	mi := &file_proto_table_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_proto_table_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_proto_table_proto_rawDescGZIP(), []int{0}
}

func (x *Table) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Table) GetDatabase() string {
	if x != nil && x.Database != nil {
		return *x.Database
	}
	return ""
}

func (x *Table) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *Table) GetEngine() *Engine {
	if x != nil {
		return x.Engine
	}
	return nil
}

func (x *Table) GetOrderBy() []string {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *Table) GetPartitionBy() string {
	if x != nil && x.PartitionBy != nil {
		return *x.PartitionBy
	}
	return ""
}

func (x *Table) GetSampleBy() string {
	if x != nil && x.SampleBy != nil {
		return *x.SampleBy
	}
	return ""
}

func (x *Table) GetTtl() string {
	if x != nil && x.Ttl != nil {
		return *x.Ttl
	}
	return ""
}

func (x *Table) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *Table) GetIndexes() []*Index {
	if x != nil {
		return x.Indexes
	}
	return nil
}

var File_proto_table_proto protoreflect.FileDescriptor

const file_proto_table_proto_rawDesc = "" +
	"\n" +
	"\x11proto/table.proto\x12\x11clickhouse.iac.v1\x1a\x12proto/column.proto\x1a\x12proto/engine.proto\x1a\x11proto/index.proto\"\x89\x04\n" +
	"\x05Table\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\bdatabase\x18\x02 \x01(\tH\x00R\bdatabase\x88\x01\x01\x123\n" +
	"\acolumns\x18\x03 \x03(\v2\x19.clickhouse.iac.v1.ColumnR\acolumns\x121\n" +
	"\x06engine\x18\x04 \x01(\v2\x19.clickhouse.iac.v1.EngineR\x06engine\x12\x19\n" +
	"\border_by\x18\x05 \x03(\tR\aorderBy\x12&\n" +
	"\fpartition_by\x18\x06 \x01(\tH\x01R\vpartitionBy\x88\x01\x01\x12 \n" +
	"\tsample_by\x18\a \x01(\tH\x02R\bsampleBy\x88\x01\x01\x12\x15\n" +
	"\x03ttl\x18\b \x01(\tH\x03R\x03ttl\x88\x01\x01\x12B\n" +
	"\bsettings\x18\t \x03(\v2&.clickhouse.iac.v1.Table.SettingsEntryR\bsettings\x122\n" +
	"\aindexes\x18\n" +
	" \x03(\v2\x18.clickhouse.iac.v1.IndexR\aindexes\x1a;\n" +
	"\rSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\v\n" +
	"\t_databaseB\x0f\n" +
	"\r_partition_byB\f\n" +
	"\n" +
	"_sample_byB\x06\n" +
	"\x04_ttlB9Z7github.com/posthog/chschema/gen/chschema_v1;chschema_v1b\x06proto3"

var (
	file_proto_table_proto_rawDescOnce sync.Once
	file_proto_table_proto_rawDescData []byte
)

func file_proto_table_proto_rawDescGZIP() []byte {
	file_proto_table_proto_rawDescOnce.Do(func() {
		file_proto_table_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_table_proto_rawDesc), len(file_proto_table_proto_rawDesc)))
	})
	return file_proto_table_proto_rawDescData
}

var file_proto_table_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_table_proto_goTypes = []any{
	(*Table)(nil),  // 0: clickhouse.iac.v1.Table
	nil,            // 1: clickhouse.iac.v1.Table.SettingsEntry
	(*Column)(nil), // 2: clickhouse.iac.v1.Column
	(*Engine)(nil), // 3: clickhouse.iac.v1.Engine
	(*Index)(nil),  // 4: clickhouse.iac.v1.Index
}
var file_proto_table_proto_depIdxs = []int32{
	2, // 0: clickhouse.iac.v1.Table.columns:type_name -> clickhouse.iac.v1.Column
	3, // 1: clickhouse.iac.v1.Table.engine:type_name -> clickhouse.iac.v1.Engine
	1, // 2: clickhouse.iac.v1.Table.settings:type_name -> clickhouse.iac.v1.Table.SettingsEntry
	4, // 3: clickhouse.iac.v1.Table.indexes:type_name -> clickhouse.iac.v1.Index
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_table_proto_init() }
func file_proto_table_proto_init() {
	if File_proto_table_proto != nil {
		return
	}
	file_proto_column_proto_init()
	file_proto_engine_proto_init()
	file_proto_index_proto_init()
	file_proto_table_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_table_proto_rawDesc), len(file_proto_table_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_table_proto_goTypes,
		DependencyIndexes: file_proto_table_proto_depIdxs,
		MessageInfos:      file_proto_table_proto_msgTypes,
	}.Build()
	File_proto_table_proto = out.File
	file_proto_table_proto_goTypes = nil
	file_proto_table_proto_depIdxs = nil
}
